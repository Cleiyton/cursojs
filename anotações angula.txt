__________________________________________INTRODUÇÂO______________________________________

para iniciar o serve do angular usamos o ng serve

e par criar um novo componente com class para test como as importaçoes do componentes 
dentro do app.module cria tambem um html separado um css

para criamos componentes podemos dar o ng g c e o nome do componente ele ja vai criar 
pasta e outras nescessidade que ele precisa e importa automaticamente os dados no app.modulo

para gerar um module precisamos colocar ng g m e o nodo do module



_______________________________________MODULE_________________________________________

quando estivermos importando algo do angular {} '' temos que colocar o que foi importado dentro
do imports do module 

provider ele serve para verificar login altenticação e entre outros 

bootstrap [AppComponent] serve para chamar o appcomponent onde estar todas as nossa telas 
sendo assim um aplicaçao SPA

quando criamos um modulo para que ele funcione na parte geral devemos dar um exports

ir no app geral module dentro do importe dele devemos colocar no nosso module 
assim ele permitirar que acessemos o componente dele 

e todas as outros componente que esteja declarado no app geral terar acesso dos  exports de  componentes 
 
 e mesmo se eu criar outro componente dentro deste modulo so preciso chamar ele para o componente.html do module
 que o app module geral ja vai conseguir ultilzar ele sem dar erro, mais casos importamos ele poderar ser 
 usado pelo app module geral





______________________________typescript_________________________________________________


para usarmos o typescript usamos o tsc  a suas extensoes tem que esta em .ts , .tsx, .d.ts

sao os tipos de arquivos que ele funciona corretamente quando rodamos ele ele gera um js

saber programaçao funcional 



____________________________________________Html____________________________________________

quando criamos uma variavel no js podepos inicalizamos ela no construtor podemos pegar ela 
pela interpolação ou seja dentro de duas {{}}





____________________________________________DIRETIVAS_____________________________________

*ngFor="declara um variavel local" ele percore ate o tamondo do array 

ngModel serve para criar variavel de referencia dentro no html 

ngModelChange  nao precisamos passar o valor do evento que queremos o angular faz isso altomatiamente 

ngOnChanges antes #2 e quando valor propety-bind e atualizados

ngOnInit quando component e inicializado e aqui que fazemos a chamada nos servidores para pegar
os dados 

ngDoCheck a cada ciclo de verificação de mudanças 

ngAfterContentlnit depois de inserir conteudo externo na view

ngAfterContentChecked a cada verificação de conteudo inserido 

ngAfterViewChecked a cada verificação de cconteudo / conteudo filho 

ngOnDestroy antes da diretiva/ component ser destruido

ng lint serve para verificar se seu codigo esta nos padroes correto da google

ng teste utilizando o jasmine 

e2e da uama olhada no protector 

dar uma olhada no karma para ver como serve para configurar 

embler/cli dar uma olhada para ver como os diretorios são criados 

_____________________________________________Service__________________________________

@Injectable  serve para permitir que ela possa ser injetada sempre que  tiver servico 

temos tambem que declarar ele no module dentro do provide sportando o servico





_______________________________________DATA BINDING________________________________________
Temos 4 Forma de iniciar o data binding 

data binding e uma forma da asociarmos informações que estao no componente para o templete e 
viser versa ou seja se temos uma variavel o atributo o metodo que retorna um valor conseguimos mostar
as infromações no template e quando o usuario despara alguns evento tambem podemos escultar esses evento no 
componente e fazer alguma logica caso nescessaria 

interpolação pegar o valor de um atributo ou metodo e ter a saida dessa informação no template
temos o propriedade bind que tambem temos essa saida no template 

temos o evento = "handler" que esse metodos estao no componente onde conseguimos execultar metodos no componente
 onde podemos realizar algumas logicas

 e temos o databandi onde podemos manter tanto o template quanto o componente atualizados isso e bom quando
 trabalhamos com formularios  dentro da interpolação podemos tambem atribuir expreçoes logicas

geito de fazer interpolação sempre dentro de duas {{}} que facilita fazer concatenação e uma interpolação
tambem e propety binding

 ####################parte do propety binding##############################################

para criar propety binding ele e feito na seguinte forma devemos colocar '[]' ou colocar o bind-atributo nos atributos da tag 

quando nao existir uma propriedade podemos usar o [attr.o elemento]


*class Style binding ele no lugar de trabalhar com variavel e component ele trabalha com css

podemos definir uma varivel no html usando o # o nome que deseja passar mais (change)="0"
apos definir podemos passar dentro das tag 

[class.a class que voce deseja] = "sua variavel criada.o valor dela  == 'como uma class que voce quer que ela compare'"


*Evente binding serve para voce ficar escultando eventos que irar acontecer 

para ultilizamos o evento usamos (click)="" para passamor valores do input para os Eventos usamos $event


* Two-way data binding

ultilizamos as duas os dois componente junto tanto o [] como o () ou seja o que esta de fora defini o que 
ela e [()]... ou seja chamamos de banana na caixa 

propety bind 

serve para referenciar valores de de um coponete para outro 
ultilizando o @Input() e nao esquecer de importa ele no angular/corretamente
para ultilizamos o propety bind se for um valor fixo nao precisa usar []
mais casso esse valor venha de uma variavel ai temos que usar o []


_____________________________________BiBiografias__________________________________________

es6-features.org
w3c evente reference
mdn evente reference

https:// angular.io/docs